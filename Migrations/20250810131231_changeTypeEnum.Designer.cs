// <auto-generated />
using System;
using KAPMProjectManagementApi.Schema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KAPMProjectManagementApi.Migrations
{
    [DbContext(typeof(ProjectManagementDBContext))]
    [Migration("20250810131231_changeTypeEnum")]
    partial class changeTypeEnum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nipp")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nipp");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasColumnName("grade");

                    b.Property<string>("Orgeh")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("orgeh");

                    b.Property<string>("Persa")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("persa");

                    b.Property<string>("Plans")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plans");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "Nipp");

                    b.HasIndex("Nipp")
                        .IsUnique();

                    b.ToTable("mst_employee");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nipp")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nipp");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("UserAdd")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "Nipp");

                    b.ToTable("mst_project_manager");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstRoleProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role_id");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role_name");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role_type");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "RoleId");

                    b.ToTable("mst_role_project");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstUnitProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UnitProject")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unit_project");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("UnitDesc")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("unit_desc");

                    b.Property<string>("UserAdd")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "UnitProject");

                    b.ToTable("mst_unit_project");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeProject")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_name");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_number");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<double>("ActualPersentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("actual_persentage");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bank");

                    b.Property<string>("ContractValue")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contract_value");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("DescProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("desc_project");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("finish_date");

                    b.Property<string>("NoContract")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no_contract");

                    b.Property<string>("NoSPMK")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no_spmk");

                    b.Property<string>("PMProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pm_project");

                    b.Property<string>("PPH")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pph");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<double>("PlanPersentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("plan_persentage");

                    b.Property<string>("ProgressReport")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("progress_report");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<DateTime>("StartDateSPMK")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date_spmk");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UnitProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unit_project");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.Property<string>("WorkingMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("working_method");

                    b.HasKey("Id", "CodeProject");

                    b.HasIndex("PMProject")
                        .IsUnique();

                    b.HasIndex("UnitProject");

                    b.ToTable("trn_project");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectAdendum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<double>("CostAfter")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cost_after");

                    b.Property<double>("CostBefore")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("cost_before");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateAfter")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_after");

                    b.Property<DateTime>("DateBefore")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_before");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reason");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("TypeAdendum")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_adendum");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.Property<string>("WBSNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wbs_no");

                    b.HasKey("Id");

                    b.HasIndex("CodeProject");

                    b.HasIndex("WBSNo");

                    b.ToTable("trn_project_adendum");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NoIssue")
                        .HasColumnType("text")
                        .HasColumnName("no_issue");

                    b.Property<string>("ActionPlan")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("action_plan");

                    b.Property<string>("ActionProblem")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("action_problem");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("NoSr")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no_sr");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("problem");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.Property<string>("WBSNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wbs_no");

                    b.Property<string>("WeekNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("week_no");

                    b.HasKey("Id", "NoIssue");

                    b.HasIndex("CodeProject");

                    b.HasIndex("NoSr");

                    b.HasIndex("WeekNo");

                    b.ToTable("trn_project_issue");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("WeekNo")
                        .HasColumnType("text")
                        .HasColumnName("week_no");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<double>("ActualPersentage")
                        .HasColumnType("double precision")
                        .HasColumnName("actual_persentage");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateReport")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_report");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("Deviation")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("deviation");

                    b.Property<double>("PlanPersentage")
                        .HasColumnType("double precision")
                        .HasColumnName("plan_persentage");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "WeekNo");

                    b.HasIndex("CodeProject");

                    b.ToTable("trn_project_report");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectReportDtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NoSr")
                        .HasColumnType("text")
                        .HasColumnName("no_sr");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("ActualDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("actual_date");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<DateTime>("PlanDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("plan_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.Property<string>("WBSNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wbs_no");

                    b.Property<string>("WeekNo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("week_no");

                    b.HasKey("Id", "NoSr");

                    b.HasIndex("CodeProject");

                    b.HasIndex("WBSNo");

                    b.HasIndex("WeekNo");

                    b.ToTable("trn_project_report_dtl");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectSO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("finish_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Nipp")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nipp");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.HasKey("Id");

                    b.HasIndex("CodeProject");

                    b.HasIndex("RoleId");

                    b.ToTable("trn_project_so");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectTimeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("WBSNo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wbs_no");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("finish_date");

                    b.Property<string>("Responsible")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("responsible");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.Property<string>("WBSLevel")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wbs_level");

                    b.Property<string>("WBSName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("wbs_name");

                    b.HasKey("Id", "WBSNo");

                    b.HasIndex("CodeProject");

                    b.ToTable("trn_project_timeline");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnScheduleInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("No")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<string>("CodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<DateTime>("DateActual")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_actual");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DatePlan")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_plan");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("ProgressReport")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("progress_report");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<int>("TotalPlan")
                        .HasColumnType("integer")
                        .HasColumnName("total_plan");

                    b.Property<string>("TrnProjectCodeProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TrnProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "No");

                    b.HasIndex("TrnProjectId", "TrnProjectCodeProject");

                    b.ToTable("trn_schedule_invoice");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstEmployee", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProjectSO", "TrnProjectSO")
                        .WithOne("MstEmployee")
                        .HasForeignKey("KAPMProjectManagementApi.Models.MstEmployee", "Nipp")
                        .HasPrincipalKey("KAPMProjectManagementApi.Models.TrnProjectSO", "Nipp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrnProjectSO");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProject", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.MstProjectManager", "MstProjectManager")
                        .WithOne("TrnProject")
                        .HasForeignKey("KAPMProjectManagementApi.Models.TrnProject", "PMProject")
                        .HasPrincipalKey("KAPMProjectManagementApi.Models.MstProjectManager", "Nipp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.MstUnitProject", "MstUnitProject")
                        .WithMany("TrnProjects")
                        .HasForeignKey("UnitProject")
                        .HasPrincipalKey("UnitProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MstProjectManager");

                    b.Navigation("MstUnitProject");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectAdendum", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnProjectAdendums")
                        .HasForeignKey("CodeProject")
                        .HasPrincipalKey("CodeProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.TrnProjectTimeline", "TrnProjectTimeline")
                        .WithMany("TrnProjectAdendums")
                        .HasForeignKey("WBSNo")
                        .HasPrincipalKey("WBSNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrnProject");

                    b.Navigation("TrnProjectTimeline");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectIssue", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnProjectIssues")
                        .HasForeignKey("CodeProject")
                        .HasPrincipalKey("CodeProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.TrnProjectReportDtl", "TrnProjectReportDtl")
                        .WithMany("TrnProjectIssues")
                        .HasForeignKey("NoSr")
                        .HasPrincipalKey("NoSr")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.TrnProjectReport", "TrnProjectReport")
                        .WithMany("TrnProjectIssues")
                        .HasForeignKey("WeekNo")
                        .HasPrincipalKey("WeekNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrnProject");

                    b.Navigation("TrnProjectReport");

                    b.Navigation("TrnProjectReportDtl");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectReport", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnProjectReports")
                        .HasForeignKey("CodeProject")
                        .HasPrincipalKey("CodeProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrnProject");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectReportDtl", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnProjectReportDtls")
                        .HasForeignKey("CodeProject")
                        .HasPrincipalKey("CodeProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.TrnProjectTimeline", "TrnProjectTimeline")
                        .WithMany("TrnProjectReportDtls")
                        .HasForeignKey("WBSNo")
                        .HasPrincipalKey("WBSNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.TrnProjectReport", "TrnProjectReport")
                        .WithMany("TrnProjectReportDtls")
                        .HasForeignKey("WeekNo")
                        .HasPrincipalKey("WeekNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrnProject");

                    b.Navigation("TrnProjectReport");

                    b.Navigation("TrnProjectTimeline");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectSO", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnProjectSOs")
                        .HasForeignKey("CodeProject")
                        .HasPrincipalKey("CodeProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.MstRoleProject", "MstRoleProject")
                        .WithMany("ProjectSOs")
                        .HasForeignKey("RoleId")
                        .HasPrincipalKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MstRoleProject");

                    b.Navigation("TrnProject");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectTimeline", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnProjectTimelines")
                        .HasForeignKey("CodeProject")
                        .HasPrincipalKey("CodeProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrnProject");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnScheduleInvoice", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.TrnProject", "TrnProject")
                        .WithMany("TrnScheduleInvoice")
                        .HasForeignKey("TrnProjectId", "TrnProjectCodeProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrnProject");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstProjectManager", b =>
                {
                    b.Navigation("TrnProject")
                        .IsRequired();
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstRoleProject", b =>
                {
                    b.Navigation("ProjectSOs");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstUnitProject", b =>
                {
                    b.Navigation("TrnProjects");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProject", b =>
                {
                    b.Navigation("TrnProjectAdendums");

                    b.Navigation("TrnProjectIssues");

                    b.Navigation("TrnProjectReportDtls");

                    b.Navigation("TrnProjectReports");

                    b.Navigation("TrnProjectSOs");

                    b.Navigation("TrnProjectTimelines");

                    b.Navigation("TrnScheduleInvoice");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectReport", b =>
                {
                    b.Navigation("TrnProjectIssues");

                    b.Navigation("TrnProjectReportDtls");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectReportDtl", b =>
                {
                    b.Navigation("TrnProjectIssues");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectSO", b =>
                {
                    b.Navigation("MstEmployee")
                        .IsRequired();
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProjectTimeline", b =>
                {
                    b.Navigation("TrnProjectAdendums");

                    b.Navigation("TrnProjectReportDtls");
                });
#pragma warning restore 612, 618
        }
    }
}
