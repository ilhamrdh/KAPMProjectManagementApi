// <auto-generated />
using System;
using KAPMProjectManagementApi.Schema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KAPMProjectManagementApi.Migrations
{
    [DbContext(typeof(ProjectManagementDBContext))]
    [Migration("20250807085025_init_table")]
    partial class init_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nipp")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nipp");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("UserAdd")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "Nipp");

                    b.ToTable("mst_project_manager");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstUnitProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UnitProject")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unit_project");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<string>("UnitDesc")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("unit_desc");

                    b.Property<string>("UserAdd")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_update");

                    b.HasKey("Id", "UnitProject");

                    b.ToTable("mst_unit_project");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeProject")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code_project");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_name");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_number");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active");

                    b.Property<double>("ActualPersentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("actual_persentage");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bank");

                    b.Property<string>("ContractValue")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contract_value");

                    b.Property<DateTime>("DateAdd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_add");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_update");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("finish_date");

                    b.Property<string>("NoContract")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no_contract");

                    b.Property<string>("NoSPMK")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no_spmk");

                    b.Property<string>("PMProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pm_project");

                    b.Property<string>("PPH")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pph");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<double>("PlanPersentage")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("plan_persentage");

                    b.Property<int>("ProgressReport")
                        .HasColumnType("integer")
                        .HasColumnName("progress_report");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<DateTime>("StartDateSPMK")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date_spmk");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("UnitProject")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unit_project");

                    b.Property<string>("UserAdd")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_add");

                    b.Property<string>("UserUpdate")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_update");

                    b.Property<string>("WorkingMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("working_method");

                    b.HasKey("Id", "CodeProject");

                    b.HasIndex("PMProject")
                        .IsUnique();

                    b.HasIndex("UnitProject");

                    b.ToTable("trn_project");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.TrnProject", b =>
                {
                    b.HasOne("KAPMProjectManagementApi.Models.MstProjectManager", "MstProjectManager")
                        .WithOne("TrnProject")
                        .HasForeignKey("KAPMProjectManagementApi.Models.TrnProject", "PMProject")
                        .HasPrincipalKey("KAPMProjectManagementApi.Models.MstProjectManager", "Nipp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KAPMProjectManagementApi.Models.MstUnitProject", "MstUnitProject")
                        .WithMany("TrnProjects")
                        .HasForeignKey("UnitProject")
                        .HasPrincipalKey("UnitProject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MstProjectManager");

                    b.Navigation("MstUnitProject");
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstProjectManager", b =>
                {
                    b.Navigation("TrnProject")
                        .IsRequired();
                });

            modelBuilder.Entity("KAPMProjectManagementApi.Models.MstUnitProject", b =>
                {
                    b.Navigation("TrnProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
